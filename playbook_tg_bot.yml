- name: installation for all hosts
  hosts: all
  gather_facts: false
  tasks:
    - name: install postgresql
      package:
        name: "postgresql"
        state: present
    - name: install postgresql-contrib
      package:
        name: "postgresql-contrib"
        state: present
    - name: install libpq-dev
      package:
        name: libpq-dev
        state: present

- name: db init
  hosts: host01
  gather_facts: false
  tasks:
    - name: create init.sql from template
      template:
        src: /root/PT-DevOps-Bot/init.sql
        dest: /tmp/init.sql
        mode: '0644'
    - name: replacedb
      replace:
        path: /tmp/init.sql
        regexp: "replacedbname"
        replace: "{{ hostvars[inventory_hostname]['DB_DATABASE'] }}"
    - name: replaceuser
      replace:
        path: /tmp/init.sql
        regexp: "replacerepluser"
        replace: "{{ hostvars[inventory_hostname]['DB_REPL_USER'] }}"
    - name: replacepassword
      replace:
        path: /tmp/init.sql
        regexp: "replacereplpassword"
        replace: "{{ hostvars[inventory_hostname]['DB_REPL_PASSWORD'] }}"
    - name: replacepostgresuser
      replace:
        path: /tmp/init.sql
        regexp: "replacepostgresuser"
        replace: "{{ hostvars[inventory_hostname]['DB_USER'] }}"
    - name: replacepostgrespassword
      replace:
        path: /tmp/init.sql
        regexp: "replacepostgrespassword"
        replace: "{{ hostvars[inventory_hostname]['DB_PASSWORD'] }}"
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted
    - name: execute init.sql
      command: psql -a -f /tmp/init.sql
      become: true
      become_user: postgres

- name: replication configuration
  hosts: host01
  gather_facts: false
  tasks:
    - name: update postgresql.conf
      blockinfile:
        path: "/etc/postgresql/{{ POSTGRES_VERSION }}/main/postgresql.conf"
        block: |
          listen_addresses = '*'
          wal_level = replica
          hot_standby = on
          max_wal_senders = 10
          max_replication_slots = 10
          hot_standby_feedback = on
          log_replication_commands = on
    - name: update pg_hba.conf
      blockinfile:
        path: "/etc/postgresql/{{ POSTGRES_VERSION }}/main/pg_hba.conf"
        block: |
          host replication all {{ ansible_host }}/24 scram-sha-256
          host all all {{ ansible_host }}/32 trust
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted

- name: slave configuration and initialization
  hosts: host02
  gather_facts: false
  tasks:
    - name: remove old PostgreSQL data directory
      command: rm -rf /var/lib/postgresql/{{ POSTGRES_VERSION }}/main
    - name: run pg_basebackup
      command: pg_basebackup -h {{ DB_HOST }} -D /var/lib/postgresql/{{ POSTGRES_VERSION }}/main/ -U {{ DB_REPL_USER }} -vP -w
      environment:
        PGPASSWORD: "{{ DB_REPL_PASSWORD }}"
    - name: change owner of PostgreSQL data directory
      command: chown -R postgres:postgres /var/lib/postgresql/
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted

- name: deploy and run python bot
  hosts: host01
  gather_facts: false
  tasks:
    - name: create bot directory
      command: mkdir -p "{{ dir }}/bot"
    - name: clone bot repository
      git:
        repo: "https://github.com/roma0896/PT-DevOps-Bot.git"
        dest: "{{ dir }}/bot"
        version: main
    - name: install python requirements
      pip:
        requirements: "{{ dir }}/bot/requirements.txt"
    - name: create logs directory
      command: mkdir -p "{{ dir }}/../logs"
    - name: run python bot
      command: python3 "{{ dir }}/bot/bot.py"
      environment:
        TOKEN: "{{ TOKEN }}"
        HOST: "{{ RM_HOST }}"
        PORT: "{{ RM_PORT }}"
        USER: "{{ RM_USER }}"
        PASSWORD: "{{ RM_PASSWORD }}"
        DBHOST: "{{ ansible_host }}"
        DBPORT: "{{ DB_PORT }}"
        DBUSER: "{{ DB_USER }}"
        DBPASSWORD: "{{ DB_PASSWORD }}"
        DBNAME: "{{ DB_DATABASE }}"
        PG_VERSION: "{{ POSTGRES_VERSION }}"